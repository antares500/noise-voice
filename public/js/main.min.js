function sendMessage(a){console.log("Client sending message: ",a),socket.emit("message",a)}function handleUserMedia(a){console.log("Adding local stream."),localVideo.src=window.URL.createObjectURL(a),localStream=a,sendMessage("got user media"),isInitiator&&maybeStart()}function handleUserMediaError(a){console.log("getUserMedia error: ",a)}function maybeStart(){!isStarted&&"undefined"!=typeof localStream&&isChannelReady&&(createPeerConnection(),pc.addStream(localStream),isStarted=!0,console.log("isInitiator",isInitiator),isInitiator&&doCall())}function createPeerConnection(){try{pc=new RTCPeerConnection(null),pc.onicecandidate=handleIceCandidate,pc.onaddstream=handleRemoteStreamAdded,pc.onremovestream=handleRemoteStreamRemoved,console.log("Created RTCPeerConnnection")}catch(a){return console.log("Failed to create PeerConnection, exception: "+a.message),void alert("Cannot create RTCPeerConnection object.")}}function handleIceCandidate(a){console.log("handleIceCandidate event: ",a),a.candidate?sendMessage({type:"candidate",label:a.candidate.sdpMLineIndex,id:a.candidate.sdpMid,candidate:a.candidate.candidate}):console.log("End of candidates.")}function handleRemoteStreamAdded(a){console.log("Remote stream added."),remoteVideo.src=window.URL.createObjectURL(a.stream),remoteStream=a.stream}function handleCreateOfferError(){console.log("createOffer() error: ",e)}function doCall(){console.log("Sending offer to peer"),pc.createOffer(setLocalAndSendMessage,handleCreateOfferError)}function doAnswer(){console.log("Sending answer to peer."),pc.createAnswer(setLocalAndSendMessage,null,sdpConstraints)}function setLocalAndSendMessage(a){a.sdp=preferOpus(a.sdp),pc.setLocalDescription(a),console.log("setLocalAndSendMessage sending message",a),sendMessage(a)}function requestTurn(a){var b=!1;for(var c in pc_config.iceServers)if("turn:"===pc_config.iceServers[c].url.substr(0,5)){b=!0,turnReady=!0;break}if(!b){console.log("Getting TURN server from ",a);var d=new XMLHttpRequest;d.onreadystatechange=function(){if(4===d.readyState&&200===d.status){var a=JSON.parse(d.responseText);console.log("Got TURN server: ",a),pc_config.iceServers.push({url:"turn:"+a.username+"@"+a.turn,credential:a.password}),turnReady=!0}},d.open("GET",a,!0),d.send()}}function handleRemoteStreamAdded(a){console.log("Remote stream added."),remoteVideo.src=window.URL.createObjectURL(a.stream),remoteStream=a.stream}function handleRemoteStreamRemoved(a){console.log("Remote stream removed. Event: ",a)}function hangup(){console.log("Hanging up."),stop(),sendMessage("bye")}function handleRemoteHangup(){}function stop(){isStarted=!1,pc.close(),pc=null}function preferOpus(a){for(var b,c=a.split("\r\n"),d=0;d<c.length;d++)if(-1!==c[d].search("m=audio")){b=d;break}if(null===b)return a;for(d=0;d<c.length;d++)if(-1!==c[d].search("opus/48000")){var e=extractSdp(c[d],/:(\d+) opus\/48000/i);e&&(c[b]=setDefaultCodec(c[b],e));break}return c=removeCN(c,b),a=c.join("\r\n")}function extractSdp(a,b){var c=a.match(b);return c&&2===c.length?c[1]:null}function setDefaultCodec(a,b){for(var c=a.split(" "),d=[],e=0,f=0;f<c.length;f++)3===e&&(d[e++]=b),c[f]!==b&&(d[e++]=c[f]);return d.join(" ")}function removeCN(a,b){for(var c=a[b].split(" "),d=a.length-1;d>=0;d--){var e=extractSdp(a[d],/a=rtpmap:(\d+) CN\/\d+/i);if(e){var f=c.indexOf(e);-1!==f&&c.splice(f,1),a.splice(d,1)}}return a[b]=c.join(" "),a}$("document").ready(function(){function a(a,b){this.nodes=b,this.stream=a,this.createNodes(b)}var b=new Tuna(context);a.prototype.createNodes=function(){for(i=0;i<this.nodes.length;i++){var a=this.nodes[i];switch(this.nodes[i]={name:a},a){case"input":var c=context.createMediaStreamSource(this.stream);break;case"delay":var c=context.createDelay(5);c.delayTime.value=0;break;case"gain":var c=context.createGain();c.gain.value=.5;break;case"tunachorus":var c=new b.Chorus({rate:1.5,feedback:.2,delay:.0045,bypass:0});break;case"compressor":var c=context.createDynamicsCompressor();break;case"destination":var c=context.destination;break;default:return void console.error(this.nodes[i]+" is not an allowed node type")}"object"==typeof c&&(this.nodes[i].node=c,this.nodes[i].node.isConnected=!0),i>0&&this.nodes[i-1].node.connect(this.nodes[i].node.input||this.nodes[i].node)}this.attachEvents(this.nodes)},a.prototype.attachEvents=function(a){var b=this;for(i=0;i<a.length;i++)switch(a[i].name){case"delay":var c=a[i];$(".delay-switch").change(c,function(){b.nodeSwitch(c)}),$(".delay-value").change(c,function(){b.nodeChangeValue(c,this)});break;case"gain":var d=a[i];$(".gain-switch").change(d,function(){b.nodeSwitch(d)}),$(".gain-value").change(d,function(){b.nodeChangeValue(d,this)});break;case"tunachorus":var e=a[i];$(".tunachorus-switch").change(e,function(){b.nodeSwitch(e)}),$(".tunachorus-rate, .tunachorus-feedback, .tunachorus-delay").change(e,function(){b.nodeChangeValue(e,this)})}},a.prototype.nodeSwitch=function(a){var b=this.nodes.indexOf(a);for(i=1;i<this.nodes.length;i++)if(this.nodes[b-i].node.isConnected){var c=this.nodes[b-i].node||null;break}for(i=1;i<this.nodes.length;i++)if(this.nodes[b+i].node.isConnected){var d=this.nodes[b+i].node||null;break}a.node.isConnected?(c.disconnect(0),a.node.disconnect(0),c.connect(d.input||d)):(c.disconnect(0),c.connect(a.node.input||a.node),a.node.connect(d.input||d)),a.node.isConnected=!a.node.isConnected},a.prototype.nodeChangeValue=function(a,b){var c=parseFloat(b.value),d=a.node;if(d instanceof GainNode&&(d.gain.value=c),d instanceof DelayNode&&(d.delayTime.value=c),d instanceof Tuna.prototype.Chorus)switch(b.name){case"rate":d.rate=c;break;case"feedback":d.feedback=c;break;case"delay":d.delay=c;break;case"bypass":d.bypass=c;break;default:console.error($(b).attr("name")+" is not an allowed setting name")}}});var isChannelReady,isInitiator=!1,isStarted=!1,localStream,pc,remoteStream,turnReady,pc_config={iceServers:[{url:"stun:stun.l.google.com:19302"}]},pc_constraints={optional:[{DtlsSrtpKeyAgreement:!0}]},sdpConstraints={mandatory:{OfferToReceiveAudio:!0,OfferToReceiveVideo:!0}},socket=io.connect();""!==room&&(console.log("Create or join room",room),socket.emit("create or join",room)),socket.on("created",function(a){console.log("Created room "+a),isInitiator=!0}),socket.on("full",function(a){console.log("Room "+a+" is full")}),socket.on("join",function(a){console.log("Another peer made a request to join room "+a),console.log("This peer is the initiator of room "+a+"!"),isChannelReady=!0}),socket.on("joined",function(a){console.log("This peer has joined room "+a),isChannelReady=!0}),socket.on("log",function(a){console.log.apply(console,a)}),socket.on("message",function(a){if(console.log("Client received message:",a),"got user media"===a)maybeStart();else if("offer"===a.type)isInitiator||isStarted||maybeStart(),pc.setRemoteDescription(new RTCSessionDescription(a)),doAnswer();else if("answer"===a.type&&isStarted)pc.setRemoteDescription(new RTCSessionDescription(a));else if("candidate"===a.type&&isStarted){var b=new RTCIceCandidate({sdpMLineIndex:a.label,candidate:a.candidate});pc.addIceCandidate(b)}else"bye"===a&&isStarted&&handleRemoteHangup()});var localVideo=document.querySelector("#localVideo"),remoteVideo=document.querySelector("#remoteVideo"),constraints={video:!0,audio:!0};getUserMedia(constraints,handleUserMedia,handleUserMediaError),console.log("Getting user media with constraints",constraints),"localhost"!=location.hostname&&requestTurn("https://computeengineondemand.appspot.com/turn?username=41784574&key=4080218913"),window.onbeforeunload=function(){sendMessage("bye")};